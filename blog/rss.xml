<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="rss.xsl"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Tech Sphere Blog</title>
        <link>https://ducbq1.github.io/tech-sphere/blog</link>
        <description>Tech Sphere Blog</description>
        <lastBuildDate>Sat, 05 Apr 2025 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Kiến Thức và Thuật Ngữ Banking Dành Cho Lập Trình Viên]]></title>
            <link>https://ducbq1.github.io/tech-sphere/blog/banking</link>
            <guid>https://ducbq1.github.io/tech-sphere/blog/banking</guid>
            <pubDate>Sat, 05 Apr 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[1. Quầy Giao Dịch (Branch Banking)]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-quầy-giao-dịch-branch-banking">1. Quầy Giao Dịch (Branch Banking)<a href="https://ducbq1.github.io/tech-sphere/blog/banking#1-qu%E1%BA%A7y-giao-d%E1%BB%8Bch-branch-banking" class="hash-link" aria-label="Direct link to 1. Quầy Giao Dịch (Branch Banking)" title="Direct link to 1. Quầy Giao Dịch (Branch Banking)">​</a></h2>
<p>Quầy giao dịch là nơi khách hàng thực hiện các giao dịch trực tiếp với nhân viên ngân hàng. Các giao dịch này có thể bao gồm:</p>
<ul>
<li><strong>Nộp tiền</strong> (Deposits)</li>
<li><strong>Rút tiền</strong> (Withdrawals)</li>
<li><strong>Chuyển tiền</strong> (Money Transfers)</li>
<li><strong>Mở tài khoản</strong> (Account Opening)</li>
<li><strong>Cung cấp thông tin tài khoản</strong> (Account Information)</li>
<li><strong>Cấp thẻ tín dụng hoặc thẻ ghi nợ</strong> (Credit/Debit Card Issuance)</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="các-loại-quầy-giao-dịch">Các loại quầy giao dịch:<a href="https://ducbq1.github.io/tech-sphere/blog/banking#c%C3%A1c-lo%E1%BA%A1i-qu%E1%BA%A7y-giao-d%E1%BB%8Bch" class="hash-link" aria-label="Direct link to Các loại quầy giao dịch:" title="Direct link to Các loại quầy giao dịch:">​</a></h3>
<ul>
<li><strong>Quầy giao dịch truyền thống</strong>: Ngân hàng trực tiếp với khách hàng thông qua nhân viên.</li>
<li><strong>Quầy tự động</strong>: Cung cấp dịch vụ tự động như rút tiền, nộp tiền qua các máy ATM hoặc Kiosk.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-hệ-thống-core-banking">2. Hệ Thống Core Banking<a href="https://ducbq1.github.io/tech-sphere/blog/banking#2-h%E1%BB%87-th%E1%BB%91ng-core-banking" class="hash-link" aria-label="Direct link to 2. Hệ Thống Core Banking" title="Direct link to 2. Hệ Thống Core Banking">​</a></h2>
<p>Hệ thống <strong>Core Banking</strong> là nền tảng phần mềm dùng để quản lý các giao dịch tài chính cơ bản trong ngân hàng. Đây là hệ thống cốt lõi giúp ngân hàng có thể thực hiện các giao dịch trên toàn quốc hoặc toàn cầu. Các tính năng chính của hệ thống core banking bao gồm:</p>
<ul>
<li><strong>Quản lý tài khoản</strong> (Account Management): Theo dõi các tài khoản của khách hàng, số dư tài khoản, và các hoạt động tài chính.</li>
<li><strong>Xử lý giao dịch</strong> (Transaction Processing): Thực hiện và ghi nhận các giao dịch của khách hàng.</li>
<li><strong>Quản lý tín dụng</strong> (Loan Management): Quản lý các khoản vay của khách hàng.</li>
<li><strong>Xử lý thanh toán</strong> (Payment Processing): Cung cấp khả năng thanh toán qua các phương thức khác nhau (chuyển khoản, thẻ, ví điện tử, v.v.).</li>
<li><strong>Báo cáo và phân tích</strong> (Reporting and Analytics): Cung cấp thông tin về hiệu suất của ngân hàng và các xu hướng tài chính.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="các-thành-phần-trong-hệ-thống-core-banking">Các thành phần trong hệ thống core banking:<a href="https://ducbq1.github.io/tech-sphere/blog/banking#c%C3%A1c-th%C3%A0nh-ph%E1%BA%A7n-trong-h%E1%BB%87-th%E1%BB%91ng-core-banking" class="hash-link" aria-label="Direct link to Các thành phần trong hệ thống core banking:" title="Direct link to Các thành phần trong hệ thống core banking:">​</a></h3>
<ul>
<li><strong>ATM Switch</strong>: Hệ thống giúp kết nối các máy ATM và các giao dịch từ các thiết bị ngân hàng khác.</li>
<li><strong>Payment Gateway</strong>: Nền tảng cho phép xử lý các giao dịch thanh toán trực tuyến.</li>
<li><strong>Internet Banking</strong>: Hệ thống ngân hàng trực tuyến cho phép khách hàng thực hiện các giao dịch qua web hoặc ứng dụng di động.</li>
<li><strong>Mobile Banking</strong>: Hệ thống cho phép thực hiện giao dịch qua điện thoại di động.</li>
<li><strong>Database</strong>: Lưu trữ dữ liệu giao dịch, thông tin khách hàng và các tài khoản.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-các-thuật-ngữ-quan-trọng-trong-ngành-ngân-hàng">3. Các Thuật Ngữ Quan Trọng Trong Ngành Ngân Hàng<a href="https://ducbq1.github.io/tech-sphere/blog/banking#3-c%C3%A1c-thu%E1%BA%ADt-ng%E1%BB%AF-quan-tr%E1%BB%8Dng-trong-ng%C3%A0nh-ng%C3%A2n-h%C3%A0ng" class="hash-link" aria-label="Direct link to 3. Các Thuật Ngữ Quan Trọng Trong Ngành Ngân Hàng" title="Direct link to 3. Các Thuật Ngữ Quan Trọng Trong Ngành Ngân Hàng">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="31-các-loại-tài-khoản">3.1. Các Loại Tài Khoản<a href="https://ducbq1.github.io/tech-sphere/blog/banking#31-c%C3%A1c-lo%E1%BA%A1i-t%C3%A0i-kho%E1%BA%A3n" class="hash-link" aria-label="Direct link to 3.1. Các Loại Tài Khoản" title="Direct link to 3.1. Các Loại Tài Khoản">​</a></h3>
<ul>
<li><strong>Tài khoản thanh toán</strong> (Checking Account): Tài khoản dùng để thực hiện các giao dịch thanh toán hàng ngày.</li>
<li><strong>Tài khoản tiết kiệm</strong> (Savings Account): Tài khoản dùng để tích lũy tiền với lãi suất.</li>
<li><strong>Tài khoản vãng lai</strong> (Current Account): Tài khoản không có lãi suất, thường dùng cho các doanh nghiệp.</li>
<li><strong>Tài khoản thẻ tín dụng</strong> (Credit Account): Tài khoản cho phép khách hàng vay tiền từ ngân hàng và trả dần với lãi suất.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="32-các-loại-giao-dịch">3.2. Các Loại Giao Dịch<a href="https://ducbq1.github.io/tech-sphere/blog/banking#32-c%C3%A1c-lo%E1%BA%A1i-giao-d%E1%BB%8Bch" class="hash-link" aria-label="Direct link to 3.2. Các Loại Giao Dịch" title="Direct link to 3.2. Các Loại Giao Dịch">​</a></h3>
<ul>
<li><strong>Chuyển khoản</strong> (Transfer): Di chuyển tiền từ một tài khoản sang tài khoản khác.</li>
<li><strong>Giao dịch rút tiền</strong> (Withdrawal): Rút tiền mặt từ tài khoản.</li>
<li><strong>Giao dịch nộp tiền</strong> (Deposit): Nộp tiền vào tài khoản ngân hàng.</li>
<li><strong>Thanh toán hóa đơn</strong> (Bill Payment): Thanh toán tiền cho các dịch vụ như điện, nước, internet.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="33-các-loại-thẻ">3.3. Các Loại Thẻ<a href="https://ducbq1.github.io/tech-sphere/blog/banking#33-c%C3%A1c-lo%E1%BA%A1i-th%E1%BA%BB" class="hash-link" aria-label="Direct link to 3.3. Các Loại Thẻ" title="Direct link to 3.3. Các Loại Thẻ">​</a></h3>
<ul>
<li><strong>Thẻ tín dụng</strong> (Credit Card): Thẻ cho phép người dùng vay tiền từ ngân hàng để thanh toán, với điều kiện trả nợ đúng hạn.</li>
<li><strong>Thẻ ghi nợ</strong> (Debit Card): Thẻ trực tiếp lấy tiền từ tài khoản của người dùng để thực hiện giao dịch.</li>
<li><strong>Thẻ trả trước</strong> (Prepaid Card): Thẻ không có tài khoản liên kết mà người dùng phải nạp tiền trước để sử dụng.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="34-quản-lý-tín-dụng">3.4. Quản Lý Tín Dụng<a href="https://ducbq1.github.io/tech-sphere/blog/banking#34-qu%E1%BA%A3n-l%C3%BD-t%C3%ADn-d%E1%BB%A5ng" class="hash-link" aria-label="Direct link to 3.4. Quản Lý Tín Dụng" title="Direct link to 3.4. Quản Lý Tín Dụng">​</a></h3>
<ul>
<li><strong>Khoản vay</strong> (Loan): Khoản tiền mà ngân hàng cấp cho khách hàng với điều kiện trả lại theo thỏa thuận.</li>
<li><strong>Hạn mức tín dụng</strong> (Credit Limit): Mức tối đa mà người dùng có thể vay mượn hoặc sử dụng trên thẻ tín dụng.</li>
<li><strong>Lãi suất</strong> (Interest Rate): Phần trăm phí mà khách hàng phải trả khi vay mượn tiền từ ngân hàng.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="4-các-công-nghệ-và-thuật-ngữ-liên-quan">4. Các Công Nghệ Và Thuật Ngữ Liên Quan<a href="https://ducbq1.github.io/tech-sphere/blog/banking#4-c%C3%A1c-c%C3%B4ng-ngh%E1%BB%87-v%C3%A0-thu%E1%BA%ADt-ng%E1%BB%AF-li%C3%AAn-quan" class="hash-link" aria-label="Direct link to 4. Các Công Nghệ Và Thuật Ngữ Liên Quan" title="Direct link to 4. Các Công Nghệ Và Thuật Ngữ Liên Quan">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="41-fintech-công-nghệ-tài-chính">4.1. FinTech (Công Nghệ Tài Chính)<a href="https://ducbq1.github.io/tech-sphere/blog/banking#41-fintech-c%C3%B4ng-ngh%E1%BB%87-t%C3%A0i-ch%C3%ADnh" class="hash-link" aria-label="Direct link to 4.1. FinTech (Công Nghệ Tài Chính)" title="Direct link to 4.1. FinTech (Công Nghệ Tài Chính)">​</a></h3>
<p>FinTech (Financial Technology) là các công nghệ mới giúp cải tiến các dịch vụ tài chính như thanh toán, tín dụng, đầu tư, và bảo hiểm. Các công nghệ FinTech phổ biến hiện nay bao gồm:</p>
<ul>
<li><strong>Blockchain</strong>: Công nghệ nền tảng cho tiền điện tử và giao dịch phi tập trung.</li>
<li><strong>AI trong ngân hàng</strong>: Sử dụng trí tuệ nhân tạo để phân tích dữ liệu tài chính và cung cấp dịch vụ khách hàng.</li>
<li><strong>Open Banking</strong>: Cho phép các ngân hàng chia sẻ dữ liệu của khách hàng với các bên thứ ba (nếu khách hàng cho phép) để cung cấp dịch vụ tài chính.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="42-payment-systems-hệ-thống-thanh-toán">4.2. Payment Systems (Hệ Thống Thanh Toán)<a href="https://ducbq1.github.io/tech-sphere/blog/banking#42-payment-systems-h%E1%BB%87-th%E1%BB%91ng-thanh-to%C3%A1n" class="hash-link" aria-label="Direct link to 4.2. Payment Systems (Hệ Thống Thanh Toán)" title="Direct link to 4.2. Payment Systems (Hệ Thống Thanh Toán)">​</a></h3>
<p>Các hệ thống thanh toán giúp xử lý và chuyển tiền giữa các bên. Một số hệ thống thanh toán phổ biến:</p>
<ul>
<li><strong>SWIFT</strong>: Mạng thanh toán quốc tế dùng để chuyển tiền giữa các ngân hàng toàn cầu.</li>
<li><strong>ACH (Automated Clearing House)</strong>: Hệ thống thanh toán tự động cho các giao dịch nội địa ở Mỹ.</li>
<li><strong>RTGS (Real-Time Gross Settlement)</strong>: Hệ thống thanh toán tức thời giữa các ngân hàng.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="43-security">4.3. Security<a href="https://ducbq1.github.io/tech-sphere/blog/banking#43-security" class="hash-link" aria-label="Direct link to 4.3. Security" title="Direct link to 4.3. Security">​</a></h3>
<p>Trong lĩnh vực ngân hàng, bảo mật là rất quan trọng. Các công nghệ bảo mật thường gặp bao gồm:</p>
<ul>
<li><strong>SSL/TLS</strong>: Các giao thức bảo mật để mã hóa giao tiếp trên web.</li>
<li><strong>2FA (Two-Factor Authentication)</strong>: Xác thực hai yếu tố để bảo vệ tài khoản người dùng.</li>
<li><strong>Tokenization</strong>: Công nghệ thay thế thông tin nhạy cảm (như số thẻ tín dụng) bằng một mã định danh duy nhất.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="5-lập-trình-và-ngân-hàng">5. Lập Trình Và Ngân Hàng<a href="https://ducbq1.github.io/tech-sphere/blog/banking#5-l%E1%BA%ADp-tr%C3%ACnh-v%C3%A0-ng%C3%A2n-h%C3%A0ng" class="hash-link" aria-label="Direct link to 5. Lập Trình Và Ngân Hàng" title="Direct link to 5. Lập Trình Và Ngân Hàng">​</a></h2>
<p>Lập trình viên làm việc với ngân hàng thường sẽ tương tác với các hệ thống ngân hàng qua các API hoặc giao thức mạng. Các công nghệ và phương pháp mà lập trình viên cần biết bao gồm:</p>
<ul>
<li><strong>RESTful APIs</strong>: Để tương tác với các dịch vụ ngân hàng trực tuyến.</li>
<li><strong>SOAP (Simple Object Access Protocol)</strong>: Giao thức dùng trong các dịch vụ web cho ngân hàng truyền thống.</li>
<li><strong>OAuth</strong>: Giao thức ủy quyền bảo mật khi sử dụng các dịch vụ ngân hàng của bên thứ ba.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="6-kết-luận">6. Kết Luận<a href="https://ducbq1.github.io/tech-sphere/blog/banking#6-k%E1%BA%BFt-lu%E1%BA%ADn" class="hash-link" aria-label="Direct link to 6. Kết Luận" title="Direct link to 6. Kết Luận">​</a></h2>
<p>Hiểu các thuật ngữ và công nghệ trong ngành ngân hàng là rất quan trọng đối với lập trình viên làm việc trong lĩnh vực tài chính. Việc nắm vững những khái niệm cơ bản về hệ thống ngân hàng, giao dịch, bảo mật, và các công nghệ tài chính giúp lập trình viên phát triển các ứng dụng tài chính hiệu quả và an toàn.</p>]]></content:encoded>
            <category>banking</category>
        </item>
        <item>
            <title><![CDATA[Cài đặt loading con trỏ chuột trong WPF (Windows Presentation Foundation)]]></title>
            <link>https://ducbq1.github.io/tech-sphere/blog/cursor-state</link>
            <guid>https://ducbq1.github.io/tech-sphere/blog/cursor-state</guid>
            <pubDate>Fri, 04 Apr 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[Sử dụng Mouse.OverrideCursor để đặt con trỏ toàn cục]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sử-dụng-mouseoverridecursor-để-đặt-con-trỏ-toàn-cục">Sử dụng <code>Mouse.OverrideCursor</code> để đặt con trỏ toàn cục<a href="https://ducbq1.github.io/tech-sphere/blog/cursor-state#s%E1%BB%AD-d%E1%BB%A5ng-mouseoverridecursor-%C4%91%E1%BB%83-%C4%91%E1%BA%B7t-con-tr%E1%BB%8F-to%C3%A0n-c%E1%BB%A5c" class="hash-link" aria-label="Direct link to sử-dụng-mouseoverridecursor-để-đặt-con-trỏ-toàn-cục" title="Direct link to sử-dụng-mouseoverridecursor-để-đặt-con-trỏ-toàn-cục">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ví-dụ-1">Ví dụ 1:<a href="https://ducbq1.github.io/tech-sphere/blog/cursor-state#v%C3%AD-d%E1%BB%A5-1" class="hash-link" aria-label="Direct link to Ví dụ 1:" title="Direct link to Ví dụ 1:">​</a></h3>
<div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Mouse.OverrideCursor = Cursors.Wait; // hoặc Cursors.Hand, Cursors.Arrow, v.v.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ví-dụ-2">Ví dụ 2:<a href="https://ducbq1.github.io/tech-sphere/blog/cursor-state#v%C3%AD-d%E1%BB%A5-2" class="hash-link" aria-label="Direct link to Ví dụ 2:" title="Direct link to Ví dụ 2:">​</a></h3>
<div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">private void Button_Click(object sender, RoutedEventArgs e)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Mouse.OverrideCursor = Cursors.Wait;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // Thực hiện công việc dài</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Task.Run(() =&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Thread.Sleep(3000); // giả lập công việc lâu</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // Trở lại UI Thread để đặt lại con trỏ</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Dispatcher.Invoke(() =&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Mouse.OverrideCursor = null; // trả về con trỏ mặc định</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        });</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    });</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<blockquote>
<p>Lưu ý: <code>Mouse.OverrideCursor = null</code> sẽ <strong>trả về con trỏ mặc định</strong>.</p>
</blockquote>]]></content:encoded>
            <category>dotnet</category>
            <category>wpf</category>
        </item>
        <item>
            <title><![CDATA[Thread tự động retry kết nối tới API nếu bị mất kết nối]]></title>
            <link>https://ducbq1.github.io/tech-sphere/blog/retry-mechanism</link>
            <guid>https://ducbq1.github.io/tech-sphere/blog/retry-mechanism</guid>
            <pubDate>Fri, 04 Apr 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[Tổng quan]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="tổng-quan">Tổng quan<a href="https://ducbq1.github.io/tech-sphere/blog/retry-mechanism#t%E1%BB%95ng-quan" class="hash-link" aria-label="Direct link to Tổng quan" title="Direct link to Tổng quan">​</a></h2>
<p>Lớp <code>AdvancedApiConnectionRetry</code> cung cấp cơ chế kết nối lại đến một API khi gặp lỗi, hỗ trợ lắng nghe các sự kiện như thành công, thất bại từng lần thử, và khi đạt giới hạn retry tối đa.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-các-thành-phần-chính">🧩 Các thành phần chính<a href="https://ducbq1.github.io/tech-sphere/blog/retry-mechanism#-c%C3%A1c-th%C3%A0nh-ph%E1%BA%A7n-ch%C3%ADnh" class="hash-link" aria-label="Direct link to 🧩 Các thành phần chính" title="Direct link to 🧩 Các thành phần chính">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-connectionlistener-interface">1. <code>ConnectionListener</code> (Interface)<a href="https://ducbq1.github.io/tech-sphere/blog/retry-mechanism#1-connectionlistener-interface" class="hash-link" aria-label="Direct link to 1-connectionlistener-interface" title="Direct link to 1-connectionlistener-interface">​</a></h3>
<p>Giao diện giúp bạn lắng nghe quá trình retry kết nối API.</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public interface ConnectionListener {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    void onSuccess();                              // Gọi khi kết nối thành công</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    void onFailure(int attempt, Exception e);      // Gọi mỗi khi thất bại</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    void onMaxRetryReached();                      // Gọi khi retry tối đa nhưng vẫn thất bại</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-retrytask-runnable">2. <code>RetryTask</code> (Runnable)<a href="https://ducbq1.github.io/tech-sphere/blog/retry-mechanism#2-retrytask-runnable" class="hash-link" aria-label="Direct link to 2-retrytask-runnable" title="Direct link to 2-retrytask-runnable">​</a></h3>
<p>Lớp thực thi chính để thực hiện kết nối và tự động retry nếu thất bại.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="-các-thuộc-tính">🔧 Các thuộc tính:<a href="https://ducbq1.github.io/tech-sphere/blog/retry-mechanism#-c%C3%A1c-thu%E1%BB%99c-t%C3%ADnh" class="hash-link" aria-label="Direct link to 🔧 Các thuộc tính:" title="Direct link to 🔧 Các thuộc tính:">​</a></h4>
<ul>
<li><code>apiUrl</code>: URL của API cần kết nối</li>
<li><code>maxRetry</code>: số lần thử lại tối đa</li>
<li><code>retryDelayMillis</code>: thời gian chờ giữa mỗi lần retry (milliseconds)</li>
<li><code>listener</code>: đối tượng lắng nghe sự kiện</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="-phương-thức">▶ Phương thức:<a href="https://ducbq1.github.io/tech-sphere/blog/retry-mechanism#-ph%C6%B0%C6%A1ng-th%E1%BB%A9c" class="hash-link" aria-label="Direct link to ▶ Phương thức:" title="Direct link to ▶ Phương thức:">​</a></h4>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">@Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public void run() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    int attempt = 0;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    while (attempt &lt; maxRetry) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        attempt++;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        try {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            HttpURLConnection connection = (HttpURLConnection) new URL(apiUrl).openConnection();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            connection.setRequestMethod("GET");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            int responseCode = connection.getResponseCode();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if (responseCode == 200) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if (listener != null) listener.onSuccess();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                throw new IOException("Non-OK response: " + responseCode);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } catch (Exception e) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if (listener != null) listener.onFailure(attempt, e);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            try {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                Thread.sleep(retryDelayMillis);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            } catch (InterruptedException ie) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                Thread.currentThread().interrupt();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if (listener != null) listener.onMaxRetryReached();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-cách-sử-dụng">3. Cách sử dụng<a href="https://ducbq1.github.io/tech-sphere/blog/retry-mechanism#3-c%C3%A1ch-s%E1%BB%AD-d%E1%BB%A5ng" class="hash-link" aria-label="Direct link to 3. Cách sử dụng" title="Direct link to 3. Cách sử dụng">​</a></h3>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public static void main(String[] args) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    String apiUrl = "https://your-api-url.com";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    int maxRetry = 5;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    int delayMillis = 2000;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    RetryTask task = new RetryTask(apiUrl, maxRetry, delayMillis, new ConnectionListener() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        public void onSuccess() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            System.out.println("✅ Kết nối thành công!");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        public void onFailure(int attempt, Exception e) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            System.out.println("❌ Lần thử " + attempt + " thất bại: " + e.getMessage());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        public void onMaxRetryReached() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            System.out.println("⚠ Đã đạt giới hạn retry nhưng vẫn thất bại.");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    });</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ExecutorService executor = Executors.newSingleThreadExecutor();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    executor.execute(task);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    executor.shutdown();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-lợi-ích">✅ Lợi ích<a href="https://ducbq1.github.io/tech-sphere/blog/retry-mechanism#-l%E1%BB%A3i-%C3%ADch" class="hash-link" aria-label="Direct link to ✅ Lợi ích" title="Direct link to ✅ Lợi ích">​</a></h2>
<ul>
<li>Hữu ích trong các tình huống API tạm thời không khả dụng.</li>
<li>Giảm thiểu lỗi runtime do các kết nối không ổn định.</li>
<li>Cấu trúc rõ ràng và dễ mở rộng.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-gợi-ý-nâng-cao">📌 Gợi ý nâng cao<a href="https://ducbq1.github.io/tech-sphere/blog/retry-mechanism#-g%E1%BB%A3i-%C3%BD-n%C3%A2ng-cao" class="hash-link" aria-label="Direct link to 📌 Gợi ý nâng cao" title="Direct link to 📌 Gợi ý nâng cao">​</a></h2>
<ul>
<li>Cho phép cấu hình method (GET, POST, ...) thay vì mặc định GET.</li>
<li>Tích hợp <code>Future</code> hoặc <code>CompletableFuture</code> để xử lý bất đồng bộ tốt hơn.</li>
<li>Ghi log chi tiết hơn hoặc gửi alert khi <code>onMaxRetryReached</code>.</li>
</ul>]]></content:encoded>
            <category>java</category>
            <category>spring boot</category>
        </item>
        <item>
            <title><![CDATA[So sánh OAuth2 JWT và JWT Filter]]></title>
            <link>https://ducbq1.github.io/tech-sphere/blog/jwt-oauth2-vs-filter</link>
            <guid>https://ducbq1.github.io/tech-sphere/blog/jwt-oauth2-vs-filter</guid>
            <pubDate>Thu, 03 Apr 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[So sánh OAuth2 JWT và JWT Filter]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="so-sánh-oauth2-jwt-và-jwt-filter">So sánh OAuth2 JWT và JWT Filter<a href="https://ducbq1.github.io/tech-sphere/blog/jwt-oauth2-vs-filter#so-s%C3%A1nh-oauth2-jwt-v%C3%A0-jwt-filter" class="hash-link" aria-label="Direct link to So sánh OAuth2 JWT và JWT Filter" title="Direct link to So sánh OAuth2 JWT và JWT Filter">​</a></h2>
<table><thead><tr><th>Tiêu chí</th><th>OAuth2 JWT</th><th>JWT Filter</th></tr></thead><tbody><tr><td><strong>Khái niệm</strong></td><td>Sử dụng OAuth2 với JWT để quản lý xác thực &amp; phân quyền</td><td>Sử dụng filter tuỳ chỉ để xử lý JWT trong request</td></tr><tr><td><strong>Quy trình xác thực</strong></td><td>OAuth2 flow (password, client credentials, etc.)</td><td>Kiểm tra JWT trong request header</td></tr><tr><td><strong>Phân quyền</strong></td><td>Dựa trên scopes, roles trong JWT</td><td>Dựa trên claims trong JWT</td></tr><tr><td><strong>Cơ chế hoạt động</strong></td><td>Spring Security OAuth2</td><td>Filter trong Spring Security</td></tr><tr><td><strong>Cơ chế cấp token</strong></td><td>OAuth2 Authorization Server</td><td>Token được tạo ở backend và gửi client</td></tr><tr><td><strong>Tính mở rộng</strong></td><td>Tích hợp dễ dàng với OAuth2 Providers</td><td>Tùy chỉnh linh hoạt</td></tr><tr><td><strong>Tính an toàn</strong></td><td>Bảo mật cao hơn nhờ flow chuẩn và revocation</td><td>Dễ dàng implement nhưng có nguy cơ bị compromise</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="khi-nào-nên-sử-dụng-oauth2-jwt">Khi nào nên sử dụng OAuth2 JWT?<a href="https://ducbq1.github.io/tech-sphere/blog/jwt-oauth2-vs-filter#khi-n%C3%A0o-n%C3%AAn-s%E1%BB%AD-d%E1%BB%A5ng-oauth2-jwt" class="hash-link" aria-label="Direct link to Khi nào nên sử dụng OAuth2 JWT?" title="Direct link to Khi nào nên sử dụng OAuth2 JWT?">​</a></h3>
<ul>
<li>Cần quản lý xác thực &amp; phân quyền chính quy</li>
<li>Tích hợp với các OAuth2 Providers (Google, Facebook, Keycloak...)</li>
<li>Hỗ trợ Single Sign-On (SSO)</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="khi-nào-nên-sử-dụng-jwt-filter">Khi nào nên sử dụng JWT Filter?<a href="https://ducbq1.github.io/tech-sphere/blog/jwt-oauth2-vs-filter#khi-n%C3%A0o-n%C3%AAn-s%E1%BB%AD-d%E1%BB%A5ng-jwt-filter" class="hash-link" aria-label="Direct link to Khi nào nên sử dụng JWT Filter?" title="Direct link to Khi nào nên sử dụng JWT Filter?">​</a></h3>
<ul>
<li>Cần xử lý xác thực nhẹ nhàng trên backend</li>
<li>Tùy chỉnh logic xác thực một cách linh hoạt</li>
<li>Không cần đối tượng OAuth2 Server</li>
</ul>]]></content:encoded>
            <category>java</category>
            <category>spring boot</category>
        </item>
        <item>
            <title><![CDATA[So sánh RSASSASigner và MACSigner trong Nimbus JOSE + JWT]]></title>
            <link>https://ducbq1.github.io/tech-sphere/blog/rsassasigner-vs-macsigner-nimbus-jwt</link>
            <guid>https://ducbq1.github.io/tech-sphere/blog/rsassasigner-vs-macsigner-nimbus-jwt</guid>
            <pubDate>Wed, 02 Apr 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[1. Giới thiệu]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-giới-thiệu">1. Giới thiệu<a href="https://ducbq1.github.io/tech-sphere/blog/rsassasigner-vs-macsigner-nimbus-jwt#1-gi%E1%BB%9Bi-thi%E1%BB%87u" class="hash-link" aria-label="Direct link to 1. Giới thiệu" title="Direct link to 1. Giới thiệu">​</a></h2>
<p>Trong thư viện <strong>Nimbus JOSE + JWT</strong>, <code>RSASSASigner</code> và <code>MACSigner</code> là hai cách khác nhau để ký JWT (JSON Web Token). Chúng khác nhau về thuật toán, bảo mật, và trường hợp sử dụng.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-bảng-so-sánh">2. Bảng so sánh<a href="https://ducbq1.github.io/tech-sphere/blog/rsassasigner-vs-macsigner-nimbus-jwt#2-b%E1%BA%A3ng-so-s%C3%A1nh" class="hash-link" aria-label="Direct link to 2. Bảng so sánh" title="Direct link to 2. Bảng so sánh">​</a></h2>
<table><thead><tr><th>Thuộc tính</th><th><code>MACSigner</code></th><th><code>RSASSASigner</code></th></tr></thead><tbody><tr><td><strong>Loại chữ ký</strong></td><td>HMAC (Hash-based Message Authentication Code)</td><td>RSA (Rivest-Shamir-Adleman)</td></tr><tr><td><strong>Thuật toán</strong></td><td>HMAC-SHA (<code>HS256</code>, <code>HS384</code>, <code>HS512</code>)</td><td>RSA (<code>RS256</code>, <code>RS384</code>, <code>RS512</code>)</td></tr><tr><td><strong>Chìa khóa</strong></td><td>Khóa bí mật chung (Shared Secret)</td><td>Cặp khóa (Private Key &amp; Public Key)</td></tr><tr><td><strong>Tốc độ</strong></td><td>Nhanh hơn do hashing đơn giản</td><td>Chậm hơn do mã hóa bất đối xứng</td></tr><tr><td><strong>Bảo mật</strong></td><td>Kém an toàn hơn vì chia sẻ chung khóa bí mật</td><td>An toàn hơn do khóa private chỉ dành cho server</td></tr><tr><td><strong>Trường hợp sử dụng</strong></td><td>Hệ thống nhỏ, không cần xác thực bên thứ ba</td><td>OAuth2, OpenID Connect, xác thực bên thứ ba</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-mã-minh-họa">3. Mã minh họa<a href="https://ducbq1.github.io/tech-sphere/blog/rsassasigner-vs-macsigner-nimbus-jwt#3-m%C3%A3-minh-h%E1%BB%8Da" class="hash-link" aria-label="Direct link to 3. Mã minh họa" title="Direct link to 3. Mã minh họa">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ký-jwt-bằng-macsigner-hs256">Ký JWT bằng <code>MACSigner</code> (HS256)<a href="https://ducbq1.github.io/tech-sphere/blog/rsassasigner-vs-macsigner-nimbus-jwt#k%C3%BD-jwt-b%E1%BA%B1ng-macsigner-hs256" class="hash-link" aria-label="Direct link to ký-jwt-bằng-macsigner-hs256" title="Direct link to ký-jwt-bằng-macsigner-hs256">​</a></h3>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">SignedJWT signedJWT = new SignedJWT(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    new JWSHeader(JWSAlgorithm.HS256),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    new JWTClaimsSet.Builder()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .subject("user123")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .issuer("viettel-auth")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .expirationTime(new Date(new Date().getTime() + 3600 * 1000))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .build()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">signedJWT.sign(new MACSigner("your-256-bit-secret"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">System.out.println("HMAC JWT: " + signedJWT.serialize());</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ký-jwt-bằng-rsassasigner-rs256">Ký JWT bằng <code>RSASSASigner</code> (RS256)<a href="https://ducbq1.github.io/tech-sphere/blog/rsassasigner-vs-macsigner-nimbus-jwt#k%C3%BD-jwt-b%E1%BA%B1ng-rsassasigner-rs256" class="hash-link" aria-label="Direct link to ký-jwt-bằng-rsassasigner-rs256" title="Direct link to ký-jwt-bằng-rsassasigner-rs256">​</a></h3>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">KeyPairGenerator keyGen = KeyPairGenerator.getInstance("RSA");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">keyGen.initialize(2048);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">KeyPair keyPair = keyGen.generateKeyPair();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RSAPrivateKey privateKey = (RSAPrivateKey) keyPair.getPrivate();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SignedJWT signedJWT = new SignedJWT(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    new JWSHeader.Builder(JWSAlgorithm.RS256).build(),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    new JWTClaimsSet.Builder()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .subject("user123")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .issuer("viettel-auth")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .expirationTime(new Date(new Date().getTime() + 3600 * 1000))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .build()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">signedJWT.sign(new RSASSASigner(privateKey));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">System.out.println("RSA JWT: " + signedJWT.serialize());</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="4-khi-nào-nên-dùng">4. Khi nào nên dùng?<a href="https://ducbq1.github.io/tech-sphere/blog/rsassasigner-vs-macsigner-nimbus-jwt#4-khi-n%C3%A0o-n%C3%AAn-d%C3%B9ng" class="hash-link" aria-label="Direct link to 4. Khi nào nên dùng?" title="Direct link to 4. Khi nào nên dùng?">​</a></h2>
<ul>
<li><strong>Dùng <code>MACSigner</code> (HS256) khi:</strong>
<ul>
<li>Cần tốc độ nhanh và ít tài nguyên.</li>
<li>Các bên tham gia <strong>tin tưởng lẫn nhau</strong> và chia sẻ chung khóa bí mật.</li>
</ul>
</li>
<li><strong>Dùng <code>RSASSASigner</code> (RS256) khi:</strong>
<ul>
<li>Cần bảo mật cao, đối tác không cần biết khóa private.</li>
<li>Dùng OAuth2, OpenID Connect, hoặc trong hệ thống phân tán.</li>
</ul>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="5-kết-luận">5. Kết luận<a href="https://ducbq1.github.io/tech-sphere/blog/rsassasigner-vs-macsigner-nimbus-jwt#5-k%E1%BA%BFt-lu%E1%BA%ADn" class="hash-link" aria-label="Direct link to 5. Kết luận" title="Direct link to 5. Kết luận">​</a></h2>
<ul>
<li><strong>RSASSASigner</strong> phù hợp với các hệ thống yêu cầu bảo mật cao và xác thực từ xa.</li>
<li><strong>MACSigner</strong> nhanh hơn nhưng kém an toàn vì khóa bí mật phải được chia sẻ giữa các bên tham gia.</li>
</ul>]]></content:encoded>
            <category>java</category>
            <category>spring boot</category>
        </item>
        <item>
            <title><![CDATA[Aspect Oriented Programming (AOP)]]></title>
            <link>https://ducbq1.github.io/tech-sphere/blog/aop</link>
            <guid>https://ducbq1.github.io/tech-sphere/blog/aop</guid>
            <pubDate>Sun, 28 May 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Aspect Oriented Programming (AOP) – lập trình hướng khía cạnh: là một kỹ thuật lập trình (kiểu như lập trình hướng đối tượng) nhằm phân tách chương trình thành các module riêng biệt, phân biệt, không phụ thuộc nhau. Khi hoạt động, chương trình sẽ kết hợp các module lại để thực hiện các chức năng, nhưng khi sửa đổi một chức năng thì chỉ cần sửa một module.]]></description>
            <content:encoded><![CDATA[<p><strong>Aspect Oriented Programming (AOP)</strong> – lập trình hướng khía cạnh: là một kỹ thuật lập trình (kiểu như lập trình hướng đối tượng) nhằm phân tách chương trình thành các module riêng biệt, phân biệt, không phụ thuộc nhau. Khi hoạt động, chương trình sẽ kết hợp các module lại để thực hiện các chức năng, nhưng khi sửa đổi một chức năng thì chỉ cần sửa một module.</p>
<p>AOP không phải dùng để thay thế OOP mà để bổ sung cho OOP.</p>
<p><strong>Aspect Oriented Programming (AOP)</strong> – lập trình hướng khía cạnh: là một kỹ thuật lập trình (kiểu như lập trình hướng đối tượng) nhằm phân tách chương trình thành các module riêng biệt, phân biệt, không phụ thuộc nhau. Khi hoạt động, chương trình sẽ kết hợp các module lại để thực hiện các chức năng, nhưng khi sửa đổi một chức năng thì chỉ cần sửa một module.</p>
<p>AOP không phải dùng để thay thế OOP mà để bổ sung cho OOP.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ví-dụ">Ví dụ:<a href="https://ducbq1.github.io/tech-sphere/blog/aop#v%C3%AD-d%E1%BB%A5" class="hash-link" aria-label="Direct link to Ví dụ:" title="Direct link to Ví dụ:">​</a></h2>
<ol>
<li>
<p><strong>Công ty và các phòng ban:</strong></p>
<p>Một công ty được chia thành nhiều phòng ban như phòng kỹ thuật, phòng kế toán, phòng kinh doanh (mỗi phòng giống như một module trong chương trình). Mỗi phòng thực hiện một nhiệm vụ riêng, nhưng cần kết hợp lại để vận hành công ty.</p>
<ul>
<li>Trong AOP có khái niệm "lát cắt", "điểm cắt", tạm hiểu là module A sẽ xen vào module B để thực hiện một chức năng nào đó mà không làm ảnh hưởng module B. "Điểm cắt" là vị trí mà module A xen vào module B.</li>
</ul>
<p>Ví dụ: Tất cả nhân viên đều cần phải quyết toán thuế. Nếu từng người một thực hiện, sẽ tốn thời gian và ảnh hưởng tới công ty. Phòng kế toán sẽ thực hiện quyết toán cho tất cả nhân viên. Nếu luật thuế thay đổi, phòng kế toán chỉ cần sửa lại mà không ảnh hưởng đến các phòng ban khác.</p>
</li>
<li>
<p><strong>Viết log trong code:</strong></p>
<p>Trong code, bạn thường thực hiện viết log cho các method (ví dụ: method nào chạy, lỗi gì xảy ra). Việc viết log không liên quan đến chức năng của method.</p>
<ul>
<li>Giờ yêu cầu chuyển sang chỉ viết log khi bắt đầu các method, bạn phải sửa tất cả các method đó. Với AOP, bạn có thể phân tách chức năng log ra thành một module riêng và sử dụng nó để thực hiện các lát cắt với các method cần log.</li>
<li>Ví dụ: Bạn có thể log ở đầu method hoặc cuối method, tùy vào điểm cắt bạn chọn.</li>
</ul>
</li>
<li>
<p><strong>Filter trong lập trình web:</strong></p>
<p>Trong lập trình web, <strong>filter</strong> là một khái niệm dùng để xử lý tất cả các request.</p>
<ul>
<li>Ví dụ: Mỗi request cần xác thực (kiểm tra login). Bạn có thể sử dụng một filter để thực hiện xác thực và nếu cần thay đổi cách xác thực, bạn chỉ cần sửa filter mà không ảnh hưởng đến các phần khác của hệ thống.</li>
</ul>
</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="các-thuật-ngữ-trong-aop">Các thuật ngữ trong AOP:<a href="https://ducbq1.github.io/tech-sphere/blog/aop#c%C3%A1c-thu%E1%BA%ADt-ng%E1%BB%AF-trong-aop" class="hash-link" aria-label="Direct link to Các thuật ngữ trong AOP:" title="Direct link to Các thuật ngữ trong AOP:">​</a></h2>
<ul>
<li><strong>Core Concern / Primary Concern:</strong> Là yêu cầu hoặc logic xử lý chính của chương trình.</li>
<li><strong>Cross-Cutting Concern:</strong> Những logic phụ cần được thực hiện khi core concern được gọi, như security, logging, tracing, monitoring, access control, error handling, transaction management, session management, input/output validation, ...</li>
<li><strong>Joinpoint:</strong> Là một điểm trong chương trình, nơi có thể chèn các cross-cutting concern. Ví dụ: Sau khi chạy một method, ta muốn ghi log, thì điểm sau khi method thực thi là một joinpoint.</li>
<li><strong>Pointcut:</strong> Là cách xác định Joinpoint, sử dụng biểu thức để kiểm tra và xác định xem liệu <strong>Advice</strong> có cần thực thi hay không.</li>
<li><strong>Advice:</strong> Các xử lý phụ được thêm vào xử lý chính. Các loại <strong>Advice</strong>:<!-- -->
<ul>
<li><strong>Before:</strong> Thực thi trước Joinpoint.</li>
<li><strong>After:</strong> Thực thi sau Joinpoint.</li>
<li><strong>Around:</strong> Thực thi trước và sau Joinpoint.</li>
<li><strong>After Returning:</strong> Thực thi sau khi Joinpoint hoàn thành bình thường.</li>
<li><strong>After Throwing:</strong> Thực thi sau khi Joinpoint kết thúc với một Exception.</li>
</ul>
</li>
<li><strong>Aspect:</strong> Tương tự như một Java class. Aspect đóng gói toàn bộ cross-cutting concern và có thể chứa JoinPoint, PointCut, và Advice.</li>
<li><strong>Target Object:</strong> Là đối tượng mà <strong>Advice</strong> được áp dụng vào.</li>
</ul>]]></content:encoded>
            <category>Hola</category>
            <category>Docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Những Tính Năng Mới Trong C# Từ Phiên Bản 8 Đến 12]]></title>
            <link>https://ducbq1.github.io/tech-sphere/blog/csharp</link>
            <guid>https://ducbq1.github.io/tech-sphere/blog/csharp</guid>
            <pubDate>Sun, 28 May 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[C# 8 (Phát Hành vào 2019)]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="c-8-phát-hành-vào-2019">C# 8 (Phát Hành vào 2019)<a href="https://ducbq1.github.io/tech-sphere/blog/csharp#c-8-ph%C3%A1t-h%C3%A0nh-v%C3%A0o-2019" class="hash-link" aria-label="Direct link to C# 8 (Phát Hành vào 2019)" title="Direct link to C# 8 (Phát Hành vào 2019)">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-nullable-reference-types">1. <strong>Nullable Reference Types</strong><a href="https://ducbq1.github.io/tech-sphere/blog/csharp#1-nullable-reference-types" class="hash-link" aria-label="Direct link to 1-nullable-reference-types" title="Direct link to 1-nullable-reference-types">​</a></h3>
<ul>
<li>C# 8 giới thiệu kiểu dữ liệu tham chiếu nullable, giúp giảm thiểu lỗi NullReferenceException.</li>
<li>Bạn có thể khai báo kiểu nullable bằng cách sử dụng dấu <code>?</code>, ví dụ: <code>string?</code>.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-async-streams">2. <strong>Async Streams</strong><a href="https://ducbq1.github.io/tech-sphere/blog/csharp#2-async-streams" class="hash-link" aria-label="Direct link to 2-async-streams" title="Direct link to 2-async-streams">​</a></h3>
<ul>
<li>C# 8 hỗ trợ <code>IAsyncEnumerable</code> và <code>await foreach</code>, cho phép xử lý các stream bất đồng bộ.</li>
<li>Ví dụ:<!-- -->
<div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">await foreach (var item in GetDataAsync())</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Console.WriteLine(item);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-switch-expressions">3. <strong>Switch Expressions</strong><a href="https://ducbq1.github.io/tech-sphere/blog/csharp#3-switch-expressions" class="hash-link" aria-label="Direct link to 3-switch-expressions" title="Direct link to 3-switch-expressions">​</a></h3>
<ul>
<li>Cung cấp cú pháp ngắn gọn và mạnh mẽ hơn để thực hiện phép so sánh trong switch.</li>
<li>Ví dụ:<!-- -->
<div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">var result = x switch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    1 =&gt; "One",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    2 =&gt; "Two",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    _ =&gt; "Unknown"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">};</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-range-and-index">4. <strong>Range and Index</strong><a href="https://ducbq1.github.io/tech-sphere/blog/csharp#4-range-and-index" class="hash-link" aria-label="Direct link to 4-range-and-index" title="Direct link to 4-range-and-index">​</a></h3>
<ul>
<li>Cung cấp kiểu <code>Range</code> và <code>Index</code> để làm việc với các dãy và các chỉ số trong mảng hoặc chuỗi dễ dàng hơn.</li>
<li>Ví dụ:<!-- -->
<div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">var array = new int[] { 1, 2, 3, 4, 5 };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">var subArray = array[1..3]; // [2, 3]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-default-interface-methods">5. <strong>Default Interface Methods</strong><a href="https://ducbq1.github.io/tech-sphere/blog/csharp#5-default-interface-methods" class="hash-link" aria-label="Direct link to 5-default-interface-methods" title="Direct link to 5-default-interface-methods">​</a></h3>
<ul>
<li>Cho phép thêm phương thức mặc định vào giao diện, giúp dễ dàng thêm tính năng mới vào giao diện mà không phá vỡ mã nguồn hiện có.</li>
<li>Ví dụ:<!-- -->
<div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public interface IExample</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    void Method1();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    void Method2() =&gt; Console.WriteLine("Default implementation");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="c-9-phát-hành-vào-2020">C# 9 (Phát Hành vào 2020)<a href="https://ducbq1.github.io/tech-sphere/blog/csharp#c-9-ph%C3%A1t-h%C3%A0nh-v%C3%A0o-2020" class="hash-link" aria-label="Direct link to C# 9 (Phát Hành vào 2020)" title="Direct link to C# 9 (Phát Hành vào 2020)">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-records">1. <strong>Records</strong><a href="https://ducbq1.github.io/tech-sphere/blog/csharp#1-records" class="hash-link" aria-label="Direct link to 1-records" title="Direct link to 1-records">​</a></h3>
<ul>
<li>Cung cấp kiểu <code>record</code> để tạo các lớp bất biến, giúp dễ dàng tạo các đối tượng với các thuộc tính không thay đổi.</li>
<li>Ví dụ:<!-- -->
<div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public record Person(string Name, int Age);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-init-only-properties">2. <strong>Init-only Properties</strong><a href="https://ducbq1.github.io/tech-sphere/blog/csharp#2-init-only-properties" class="hash-link" aria-label="Direct link to 2-init-only-properties" title="Direct link to 2-init-only-properties">​</a></h3>
<ul>
<li>Cho phép khai báo thuộc tính chỉ có thể được gán giá trị một lần trong quá trình khởi tạo đối tượng.</li>
<li>Ví dụ:<!-- -->
<div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public class Person</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public string Name { get; init; }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-covariant-returns">3. <strong>Covariant Returns</strong><a href="https://ducbq1.github.io/tech-sphere/blog/csharp#3-covariant-returns" class="hash-link" aria-label="Direct link to 3-covariant-returns" title="Direct link to 3-covariant-returns">​</a></h3>
<ul>
<li>Hỗ trợ việc thay đổi kiểu trả về trong lớp kế thừa, miễn là kiểu trả về là một kiểu con của kiểu trả về trong lớp cơ sở.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-pattern-matching-enhancements">4. <strong>Pattern Matching Enhancements</strong><a href="https://ducbq1.github.io/tech-sphere/blog/csharp#4-pattern-matching-enhancements" class="hash-link" aria-label="Direct link to 4-pattern-matching-enhancements" title="Direct link to 4-pattern-matching-enhancements">​</a></h3>
<ul>
<li>Cải thiện khả năng so khớp mẫu với <code>and</code>, <code>or</code>, và <code>not</code>.</li>
<li>Ví dụ:<!-- -->
<div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">if (obj is int or double) { ... }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="c-10-phát-hành-vào-2021">C# 10 (Phát Hành vào 2021)<a href="https://ducbq1.github.io/tech-sphere/blog/csharp#c-10-ph%C3%A1t-h%C3%A0nh-v%C3%A0o-2021" class="hash-link" aria-label="Direct link to C# 10 (Phát Hành vào 2021)" title="Direct link to C# 10 (Phát Hành vào 2021)">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-global-using-directives">1. <strong>Global Using Directives</strong><a href="https://ducbq1.github.io/tech-sphere/blog/csharp#1-global-using-directives" class="hash-link" aria-label="Direct link to 1-global-using-directives" title="Direct link to 1-global-using-directives">​</a></h3>
<ul>
<li>Cung cấp khả năng khai báo các <code>using</code> toàn cục, giúp giảm thiểu việc khai báo <code>using</code> nhiều lần trong mỗi file.</li>
<li>Ví dụ:<!-- -->
<div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">global using System;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">global using MyNamespace;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-file-scoped-namespace">2. <strong>File-scoped Namespace</strong><a href="https://ducbq1.github.io/tech-sphere/blog/csharp#2-file-scoped-namespace" class="hash-link" aria-label="Direct link to 2-file-scoped-namespace" title="Direct link to 2-file-scoped-namespace">​</a></h3>
<ul>
<li>Giảm bớt mức độ lồng vào các namespace bằng cách sử dụng <code>namespace</code> ở mức file.</li>
<li>Ví dụ:<!-- -->
<div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">namespace MyNamespace;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-improved-lambda-expressions">3. <strong>Improved Lambda Expressions</strong><a href="https://ducbq1.github.io/tech-sphere/blog/csharp#3-improved-lambda-expressions" class="hash-link" aria-label="Direct link to 3-improved-lambda-expressions" title="Direct link to 3-improved-lambda-expressions">​</a></h3>
<ul>
<li>Cải tiến cú pháp lambda với khả năng khai báo loại trả về rõ ràng.</li>
<li>Ví dụ:<!-- -->
<div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Func&lt;int, int, int&gt; add = (x, y) =&gt; x + y;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="c-11-phát-hành-vào-2022">C# 11 (Phát Hành vào 2022)<a href="https://ducbq1.github.io/tech-sphere/blog/csharp#c-11-ph%C3%A1t-h%C3%A0nh-v%C3%A0o-2022" class="hash-link" aria-label="Direct link to C# 11 (Phát Hành vào 2022)" title="Direct link to C# 11 (Phát Hành vào 2022)">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-list-patterns">1. <strong>List Patterns</strong><a href="https://ducbq1.github.io/tech-sphere/blog/csharp#1-list-patterns" class="hash-link" aria-label="Direct link to 1-list-patterns" title="Direct link to 1-list-patterns">​</a></h3>
<ul>
<li>Hỗ trợ các mẫu danh sách để kiểm tra các thuộc tính trong một danh sách hoặc mảng.</li>
<li>Ví dụ:<!-- -->
<div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">if (myArray is [1, 2, ..])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // Match for an array starting with 1, followed by 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-required-members">2. <strong>Required Members</strong><a href="https://ducbq1.github.io/tech-sphere/blog/csharp#2-required-members" class="hash-link" aria-label="Direct link to 2-required-members" title="Direct link to 2-required-members">​</a></h3>
<ul>
<li>Cung cấp từ khóa <code>required</code> để yêu cầu các thuộc tính phải được gán giá trị trong quá trình khởi tạo đối tượng.</li>
<li>Ví dụ:<!-- -->
<div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public class Person</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public required string Name { get; set; }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-utf-8-string-literals">3. <strong>UTF-8 String Literals</strong><a href="https://ducbq1.github.io/tech-sphere/blog/csharp#3-utf-8-string-literals" class="hash-link" aria-label="Direct link to 3-utf-8-string-literals" title="Direct link to 3-utf-8-string-literals">​</a></h3>
<ul>
<li>Hỗ trợ khai báo chuỗi có mã hóa UTF-8 trực tiếp trong mã nguồn.</li>
<li>Ví dụ:<!-- -->
<div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">var utf8String = u8"Hello, World!";</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="c-12-phát-hành-vào-2023">C# 12 (Phát Hành vào 2023)<a href="https://ducbq1.github.io/tech-sphere/blog/csharp#c-12-ph%C3%A1t-h%C3%A0nh-v%C3%A0o-2023" class="hash-link" aria-label="Direct link to C# 12 (Phát Hành vào 2023)" title="Direct link to C# 12 (Phát Hành vào 2023)">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-primary-constructor-for-non-record-types">1. <strong>Primary Constructor for Non-Record Types</strong><a href="https://ducbq1.github.io/tech-sphere/blog/csharp#1-primary-constructor-for-non-record-types" class="hash-link" aria-label="Direct link to 1-primary-constructor-for-non-record-types" title="Direct link to 1-primary-constructor-for-non-record-types">​</a></h3>
<ul>
<li>Cho phép sử dụng constructor chính trong các lớp không phải record.</li>
<li>Ví dụ:<!-- -->
<div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public class Person(string name, int age)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public void Print() =&gt; Console.WriteLine($"{name}, {age}");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-improved-static-abstract-members">2. <strong>Improved Static Abstract Members</strong><a href="https://ducbq1.github.io/tech-sphere/blog/csharp#2-improved-static-abstract-members" class="hash-link" aria-label="Direct link to 2-improved-static-abstract-members" title="Direct link to 2-improved-static-abstract-members">​</a></h3>
<ul>
<li>Cho phép sử dụng các thành viên tĩnh trừu tượng trong giao diện.</li>
<li>Ví dụ:<!-- -->
<div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public interface IShape</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static abstract double Area { get; }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-enhanced-pattern-matching">3. <strong>Enhanced Pattern Matching</strong><a href="https://ducbq1.github.io/tech-sphere/blog/csharp#3-enhanced-pattern-matching" class="hash-link" aria-label="Direct link to 3-enhanced-pattern-matching" title="Direct link to 3-enhanced-pattern-matching">​</a></h3>
<ul>
<li>Mở rộng khả năng so khớp mẫu với các điều kiện phức tạp hơn, chẳng hạn như việc kết hợp các loại đối tượng khác nhau.</li>
</ul>
<hr>
<p>Tóm lại, C# đã liên tục cải tiến và bổ sung những tính năng mới giúp tăng cường khả năng lập trình, bảo mật, và khả năng mở rộng trong suốt các phiên bản từ C# 8 đến C# 12.</p>]]></content:encoded>
            <category>csharp</category>
        </item>
        <item>
            <title><![CDATA[Welcome]]></title>
            <link>https://ducbq1.github.io/tech-sphere/blog/welcome</link>
            <guid>https://ducbq1.github.io/tech-sphere/blog/welcome</guid>
            <pubDate>Thu, 26 Aug 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Docusaurus blogging features are powered by the blog plugin.]]></description>
            <content:encoded><![CDATA[<p><a href="https://docusaurus.io/docs/blog" target="_blank" rel="noopener noreferrer">Docusaurus blogging features</a> are powered by the <a href="https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog" target="_blank" rel="noopener noreferrer">blog plugin</a>.</p>
<p>Here are a few tips you might find useful.</p>
<p>Simply add Markdown files (or folders) to the <code>blog</code> directory.</p>
<p>Regular blog authors can be added to <code>authors.yml</code>.</p>
<p>The blog post date can be extracted from filenames, such as:</p>
<ul>
<li><code>2019-05-30-welcome.md</code></li>
<li><code>2019-05-30-welcome/index.md</code></li>
</ul>
<p>A blog post folder can be convenient to co-locate blog post images:</p>
<p><img decoding="async" loading="lazy" alt="Docusaurus Plushie" src="https://ducbq1.github.io/tech-sphere/assets/images/docusaurus-plushie-banner-a60f7593abca1e3eef26a9afa244e4fb.jpeg" width="1500" height="500" class="img_ev3q"></p>
<p>The blog supports tags as well!</p>
<p><strong>And if you don't want a blog</strong>: just delete this directory, and use <code>blog: false</code> in your Docusaurus config.</p>]]></content:encoded>
            <category>Facebook</category>
            <category>Hello</category>
            <category>Docusaurus</category>
        </item>
        <item>
            <title><![CDATA[MDX Blog Post]]></title>
            <link>https://ducbq1.github.io/tech-sphere/blog/mdx-blog-post</link>
            <guid>https://ducbq1.github.io/tech-sphere/blog/mdx-blog-post</guid>
            <pubDate>Sun, 01 Aug 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Blog posts support Docusaurus Markdown features, such as MDX.]]></description>
            <content:encoded><![CDATA[<p>Blog posts support <a href="https://docusaurus.io/docs/markdown-features" target="_blank" rel="noopener noreferrer">Docusaurus Markdown features</a>, such as <a href="https://mdxjs.com/" target="_blank" rel="noopener noreferrer">MDX</a>.</p>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_BuS1"><p>Use the power of React to create interactive blog posts.</p></div></div>
<!-- -->
<p>For example, use JSX to create an interactive button:</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">button onClick</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">alert</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'button clicked!'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token maybe-class-name">Click</span><span class="token plain"> me</span><span class="token operator" style="color:#393A34">!</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">button</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<button>Click me!</button>]]></content:encoded>
            <category>Docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Long Blog Post]]></title>
            <link>https://ducbq1.github.io/tech-sphere/blog/long-blog-post</link>
            <guid>https://ducbq1.github.io/tech-sphere/blog/long-blog-post</guid>
            <pubDate>Wed, 29 May 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[This is the summary of a very long blog post,]]></description>
            <content:encoded><![CDATA[<p>This is the summary of a very long blog post,</p>
<p>Use a <code>&lt;!--</code> <code>truncate</code> <code>--&gt;</code> comment to limit blog post size in the list view.</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>]]></content:encoded>
            <category>Hello</category>
            <category>Docusaurus</category>
        </item>
        <item>
            <title><![CDATA[First Blog Post]]></title>
            <link>https://ducbq1.github.io/tech-sphere/blog/first-blog-post</link>
            <guid>https://ducbq1.github.io/tech-sphere/blog/first-blog-post</guid>
            <pubDate>Tue, 28 May 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[Lorem ipsum dolor sit amet...]]></description>
            <content:encoded><![CDATA[<p>Lorem ipsum dolor sit amet...</p>
<p>...consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>]]></content:encoded>
            <category>Hola</category>
            <category>Docusaurus</category>
        </item>
    </channel>
</rss>